#BlueJ class context
comment0.params=X_MIN\ X_MAX\ Y_MIN\ Y_MAX
comment0.target=KdTreeST(double,\ double,\ double,\ double)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ KdTreeST\r\n
comment1.params=
comment1.target=boolean\ isEmpty()
comment1.text=\r\n\ return\ true\ if\ the\ KDTree\ contains\ no\ elements\r\n\ else\ return\ false\r\n
comment10.params=r\ queue
comment10.target=void\ points(KdTreeST.Node,\ Queue)
comment10.text=\r\n\ helper\ method\ to\ recursively\ add\ the\ points\ of\ nodes\ into\ the\ queue\r\n
comment11.params=rect
comment11.target=java.lang.Iterable\ range(RectHV)
comment11.text=\r\n\ return\ all\ of\ the\ points\ contained\ within\ a\ range\r\n
comment12.params=r\ rect\ queue
comment12.target=void\ range(KdTreeST.Node,\ RectHV,\ Queue)
comment12.text=\r\n\ helper\ method\ for\ range\ method\r\n
comment13.params=point
comment13.target=Point2D\ nearest(Point2D)
comment13.text=\r\n\ find\ the\ point\ nearest\ to\ the\ target\ point\r\n
comment14.params=r\ point\ closestPoint
comment14.target=Point2D\ nearest(KdTreeST.Node,\ Point2D,\ Point2D)
comment14.text=\r\n\ helper\ method\ for\ nearest\r\n
comment2.params=
comment2.target=int\ size()
comment2.text=\r\n\ returnt\ the\ number\ of\ elements\ in\ the\ KDTree\r\n
comment3.params=point\ value
comment3.target=void\ put(Point2D,\ java.lang.Object)
comment3.text=\r\n\ publically\ accessible\ put\ method\ to\ place\ a\ point\ into\ the\ KdTree\r\n
comment4.params=point\ value\ r\ level\ x_min\ x_max\ y_min\ y_max
comment4.target=void\ put(Point2D,\ java.lang.Object,\ KdTreeST.Node,\ int,\ double,\ double,\ double,\ double)
comment4.text=\r\n\ helper\ method\ for\ put\ that\ acts\ recursively\r\n
comment5.params=point
comment5.target=java.lang.Object\ get(Point2D)
comment5.text=\r\n\ get\ the\ Value\ associated\ with\ a\ specific\ point\r\n
comment6.params=point\ r\ level
comment6.target=java.lang.Object\ get(Point2D,\ KdTreeST.Node,\ int)
comment6.text=\r\n\ helper\ method\ for\ get(Point2D\ point)\r\n
comment7.params=point
comment7.target=boolean\ contains(Point2D)
comment7.text=\r\n\ returns\ true\ if\ the\ point\ is\ contained\ in\ the\ KDTree\r\n
comment8.params=r\ point\ level
comment8.target=boolean\ contains(KdTreeST.Node,\ Point2D,\ int)
comment8.text=\r\n\ helper\ method\ for\ contains\r\n
comment9.params=
comment9.target=java.lang.Iterable\ points()
comment9.text=\r\n\ return\ all\ of\ the\ points\ in\ the\ KDTree\r\n
numComments=15
